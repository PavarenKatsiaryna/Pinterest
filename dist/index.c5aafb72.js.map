{"mappings":"AEGA,MAAM,EAAS,CACb,EAAG,EAAE,CACL,EAAG,EAAE,CACL,EAAG,EAAE,CACL,EAAG,EAAE,AACP,EAEA,IAAI,EAAmB,EAoBvB,SAAS,EAAkB,CAAK,CAAE,CAAI,EACpC,aAAa,OAAO,CAAC,EAAM,KAAK,SAAS,CAAC,GAC5C,CAmBA,MAAM,EAAS,CACb,OAAA,EACA,oBA9BF,WACE,CAAM,CAAC,EAAE,CAAG,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,cAAgB,MAC5D,CAAM,CAAC,EAAE,CAAG,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,oBAAsB,MAClE,CAAM,CAAC,EAAE,CAAG,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,oBAAsB,MAClE,CAAM,CAAC,EAAE,CAAG,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,oBAAsB,KACpE,EA0BE,kBAAA,EACA,eAlBF,SAAwB,CAAQ,CAAE,CAAU,EAC1C,CAAM,CAAC,EAAW,CAAC,IAAI,CAAC,GACxB,EAAkB,CAAM,CAAC,EAAE,CAAE,aAC7B,EAAkB,CAAM,CAAC,EAAW,CAAE,CAAC,cAAc,EAAE,EAAW,CAAC,CACrE,EAeE,UAbF,WACE,OAAO,CACT,EAYE,UAVF,SAAmB,CAAK,EACtB,EAAmB,CACrB,EASE,aA3CF,WACE,OAAO,CAAM,CAAC,EAAE,AAClB,EA0CE,aAxCF,SAAsB,CAAI,EACxB,CAAM,CAAC,EAAE,CAAG,CACd,CAuCA,EC5DA,eAAe,IACb,IAAM,EAAW,MAAM,MACrB,2EAGF,OAAO,MAAM,EAAS,IAAI,EAC5B,CELA,SAAS,EAAc,CAAA,IAAE,CAAG,CAAA,UAAE,CAAS,CAAA,MAAE,CAAK,CAAA,KAAE,CAAI,CAAA,UAAE,CAAS,CAAE,EAC/D,IAAM,EAAW,SAAS,aAAa,CAAC,GAOxC,GANA,EAAU,OAAO,CAAC,AAAC,IACjB,EAAS,SAAS,CAAC,GAAG,CAAC,EACzB,GACI,GACF,CAAA,EAAS,SAAS,CAAG,CADvB,EAGI,EACF,IAAK,OAAO,EACV,EAAS,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAE,CAAC,EAAE,CAAS,CAAC,IAAI,CAAC,CAAC,EAQvD,OAJK,GACH,EAAM,MAAM,CAAC,GAGR,CACT,CAEA,SAAS,EAAoB,CAAK,CAAE,CAAK,CAAE,CAAE,CAAE,CAAM,EAWnD,OAVe,EAAc,CAC3B,IAAK,SACL,UAAW,CAAC,EAAM,CAClB,UAAW,CACT,GAAI,CAAC,EAAG,AACV,EACA,MAAO,EACP,KAAM,CACR,EAGF,CC7BA,MAAM,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAI,CFyMzC,SAAS,EAAgB,CAAK,EAC5B,IAAM,EAAU,SAAS,aAAa,CAAC,QACnC,GACF,EAAQ,MAAM,GAEhB,IAAM,EAAO,AAAA,EAAc,CACzB,IAAK,OACL,UAAW,CAAC,OAAO,CACnB,MAAO,IACT,GAEM,EAAgB,AAAA,EAAc,CAClC,IAAK,MACL,UAAW,CAAC,kBAAkB,CAC9B,MAAO,CACT,GAEA,IAAK,IAAM,KAAY,EAAO,CAC5B,IAAM,EAAO,CAAE,KAAM,CAAS,CAC9B,CAAA,EAAK,IAAI,CAAG,AE1NhB,SAAwB,CAAO,EAC7B,IAAM,EAAO,AAAA,EAAc,CACzB,IAAK,MACL,UAAW,CAAC,OAAO,AACrB,GAIM,EGdC,AHc8B,CGdzB,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,AHcH,EGdS,MAAM,EAAE,CHgBxC,AAAA,EAAc,CAC1B,IAAK,MACL,UAAW,CAAC,eAAe,CAC3B,UAAW,CACT,IAAK,EAAQ,IAAI,CAAC,OAAO,CAAG,WAAa,EAAQ,IAAI,CAAC,EAAE,CACxD,OAAQ,EAAS,KACjB,MAAO,OACT,EACA,MAAO,CACT,GAEA,IAAM,EAAU,AAAA,EAAc,CAC5B,IAAK,MACL,UAAW,CAAC,eAAe,CAC3B,MAAO,CACT,GAcA,OAZsB,AAAA,EAAc,CAClC,IAAK,MACL,UAAW,CAAC,cAAc,CAC1B,UAAW,CAAE,IAAK,EAAQ,IAAI,CAAC,MAAM,AAAC,EACtC,MAAO,CACT,GACuB,AAAA,EAAc,CACnC,IAAK,MACL,UAAW,CAAC,eAAe,CAC3B,KAAM,CAAC,CAAC,EAAE,EAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,CAChC,MAAO,CACT,GACO,CACT,EFkL+B,GAC3B,EAAK,GAAG,CAAG,AEjLf,SAAuB,CAAO,EAC5B,IAAM,EAAM,AAAA,EAAc,CACxB,IAAK,MACL,UAAW,CAAC,WAAW,CACvB,MAAO,EAAQ,IAAI,AACrB,GAEM,EAAY,AAAA,EAChB,oBACA,mBACA,aACA,GAEI,EAAiB,AAAA,EACrB,eACA,mBACA,kBACA,GAIF,EAAU,gBAAgB,CAAC,QAAS,MAClC,ACjCJ,SAAwB,CAAM,CAAE,CAAI,EAClC,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,YACrB,EAAO,MAAM,CAAC,GAEd,IAAM,EAAoB,AAAA,EAAc,CACtC,IAAK,MACL,UAAW,CAAC,uBAAuB,CACnC,MAAO,CACT,GAEM,EAAiB,AAAA,EAAc,CACnC,IAAK,MACL,UAAW,CAAC,oBAAoB,CAChC,MAAO,CACT,GAEsB,AAAA,EAAc,CAClC,IAAK,MACL,UAAW,CAAC,mBAAmB,CAC/B,KAAM,oBACN,MAAO,CACT,GASA,AAhEF,SAA6B,CAAM,CAAE,CAAI,CAAE,CAAU,EACnD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IASrC,AARkB,AAAA,EAAc,CAC9B,IAAK,IACL,UAAW,CAAC,aAAa,CACzB,UAAW,CAAE,KAAM,GAAI,EACvB,KAAM,CAAU,CAAC,EAAE,CACnB,MAAO,CACT,GAEU,gBAAgB,CAAC,QAAS,WAElC,IAAM,EAAQ,AADA,AAAA,EAAO,YAAY,GACb,SAAS,CAAC,AAAC,GACtB,EAAK,EAAE,GAAK,EAAK,IAAI,CAAC,EAAE,CAGnB,CAAA,KAAV,IACF,AAAA,EAAO,YAAY,GAAG,MAAM,CAAC,EAAO,GACpC,AAAA,EAAO,cAAc,CAAC,EAAK,IAAI,CAAE,IAG/B,EAAK,IAAI,GACX,EAAK,IAAI,CAAC,MAAM,GAChB,EAAK,IAAI,CAAG,KAEhB,EAEJ,EA+BuB,AAAA,EAAc,CACjC,IAAK,MACL,UAAW,CAAC,kBAAkB,CAC9B,MAAO,CACT,GAEkC,EAAM,CACtC,UACA,UACA,UACA,UACD,EAED,IAAM,EAAiB,AAAA,EAAc,CACnC,IAAK,MACL,UAAW,CAAC,oBAAoB,CAChC,MAAO,CACT,GAUA,AARsB,AAAA,EAAc,CAClC,IAAK,SACL,UAAW,CAAC,mBAAmB,CAC/B,KAAM,UACN,MAAO,CACT,GAGc,gBAAgB,CAAC,QAAS,KACtC,EAAS,MAAM,EACjB,EACF,EDtBmB,SAAS,aAAa,CAAC,SAAU,EAClD,GAGA,EAAe,gBAAgB,CAAC,QAAS,MACvC,AEvEJ,SAA+B,CAAM,EACnC,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,QACpB,EAAO,MAAM,CAAC,GAEd,IAAM,EAAO,AAAA,EAAc,CACzB,IAAK,MACL,UAAW,CAAC,aAAa,CACzB,MAAO,CACT,GAEM,EAAU,AAAA,EAAc,CAC5B,IAAK,MACL,UAAW,CAAC,gBAAgB,CAC5B,MAAO,CACT,GAEc,AAAA,EAAc,CAC1B,IAAK,MACL,UAAW,CAAC,cAAc,CAC1B,KAAM,gBACN,MAAO,CACT,GAGA,IAAM,EAAO,AAAA,EAAc,CACzB,IAAK,MACL,UAAW,CAAC,aAAa,CACzB,MAAO,CACT,GAEM,EAAU,CACd,OACA,qBACA,oBACA,uBACA,iBACA,4BACA,gBACA,+BACD,CACD,IAAK,IAAI,EAAI,EAAG,GAAK,EAAQ,MAAM,CAAG,EAAG,IAAK,CAC5C,IAAM,EAAQ,AAAA,EAAc,CAC1B,IAAK,QACL,UAAW,CAAC,cAAc,CAC1B,KAAM,CAAO,CAAC,EAAE,CAChB,MAAO,CACT,GAEA,AAAA,EAAc,CACZ,IAAK,QACL,UAAW,CAAC,iBAAiB,CAC7B,UAAW,CACT,KAAM,UACR,EACA,MAAO,CACT,GAEA,AAAA,EAAc,CACZ,IAAK,OACL,UAAW,CAAC,aAAa,CACzB,MAAO,CACT,EACF,CAEA,IAAM,EAAS,AAAA,EAAc,CAC3B,IAAK,MACL,UAAW,CAAC,eAAe,CAC3B,MAAO,CACT,GAEM,EAAc,AAAA,EAAc,CAChC,IAAK,SACL,UAAW,CAAC,cAAc,CAC1B,KAAM,SACN,MAAO,CACT,GAEM,EAAe,AAAA,EAAc,CACjC,IAAK,SACL,UAAW,CAAC,eAAe,CAC3B,KAAM,YACN,MAAO,CACT,GACM,EAAsB,AAAA,EAAc,CACxC,IAAK,OACL,UAAW,CAAC,UAAU,CACtB,MAAO,CACT,GA2BA,IAAK,IAAM,KAxBX,EAAY,gBAAgB,CAAC,QAAS,KACpC,EAAQ,MAAM,EAChB,GAIA,EAAa,gBAAgB,CAAC,QAAS,KACrC,EAAa,KAAK,CAAC,OAAO,CAAG,QAC7B,EAAoB,KAAK,CAAC,OAAO,CAAG,OACpC,EAAoB,SAAS,CAAC,GAAG,CAAC,QAClC,WAAW,KACT,EAAoB,KAAK,CAAC,OAAO,CAAG,OACpC,EAAQ,MAAM,GAEd,WAAW,KACL,OAAO,UAAU,EAAI,MACvB,MAAM,0BAEV,EAAG,IACL,EAAG,KACL,GAGkB,EAAQ,gBAAgB,CAAC,iBAEzC,EAAS,gBAAgB,CAAC,QAAS,AAAC,IAClC,IAAM,EAAY,EAAE,aAAa,AAC7B,CAAA,EAAU,iBAAiB,CAAC,OAAO,CACrC,EAAU,KAAK,CAAC,KAAK,CAAG,MAExB,EAAU,KAAK,CAAC,KAAK,CAAG,OAE5B,EAEJ,EFtD0B,SAAS,aAAa,CAAC,SAC/C,GAEA,EAAQ,IAAI,CAAC,gBAAgB,CAAC,YAAa,WACzC,EAAI,KAAK,CAAC,OAAO,CAAG,MACtB,GAEA,EAAQ,IAAI,CAAC,gBAAgB,CAAC,WAAY,WACxC,EAAI,KAAK,CAAC,OAAO,CAAG,MACtB,EACF,EF4I6B,GACzB,EAAc,MAAM,CAAC,EAAK,IAAI,CAChC,CACF,EHjOA,AG8EA,WACE,IAAM,EAAS,AAAA,EAAc,CAC3B,IAAK,SACL,UAAW,CAAC,SAAS,CACrB,MAAO,IACT,GAEM,EAAkB,AAAA,EAAc,CACpC,IAAK,MACL,UAAW,CAAC,oBAAoB,CAChC,MAAO,CACT,GAEM,EAAW,AAAA,EAAc,CAC7B,IAAK,MACL,UAAW,CAAC,aAAa,CACzB,MAAO,CACT,GAEM,EAAU,AAAA,EAAc,CAC5B,IAAK,MACL,UAAW,CAAC,YAAY,CACxB,MAAO,CACT,GAEoB,AAAA,EAAc,CAChC,IAAK,OACL,UAAW,CAAC,iBAAiB,CAC7B,KAAM,YACN,MAAO,CACT,GAaA,AAXgB,AAAA,EAAc,CAC5B,IAAK,MACL,UAAW,CAAC,YAAY,CACxB,UAAW,CACT,IAAK,gFACL,IAAK,gBACP,EACA,MAAO,CACT,GAGQ,gBAAgB,CAAC,QAAS,WAChC,AAAA,EAAO,SAAS,CAAC,GACjB,EAAgB,AAAA,EAAO,YAAY,GACrC,GAEA,IAAM,EAAW,AAAA,EAAc,CAC7B,IAAK,MACL,UAAW,CAAC,kBAAkB,CAC9B,MAAO,CACT,IAEA,AAnHF,SAAyB,CAAM,EAY7B,AAXiB,AAAA,EAAc,CAC7B,IAAK,QACL,UAAW,CAAC,oBAAoB,CAChC,KAAM,KAAA,EACN,UAAW,CACT,KAAM,SACN,YAAa,UACf,EACA,MAAO,CACT,GAES,gBAAgB,CAAC,QAAS,SAAU,CAAK,MAnBvB,EAoBzB,IAAM,EAAa,EAAM,MAAM,CAAC,KAAK,CAAC,WAAW,GAG3C,EAAS,AAAA,EAAO,MAAM,CACtB,EAAS,AAAA,EAAO,SAAS,GAxBN,EALpB,AA8BS,CAAA,AAAW,KAAX,EAAgB,CAAM,CAAC,EAAO,CAAG,AAAA,EAAO,YAAY,EAAlE,EA9BW,MAAM,CAAC,AAAC,GACnB,EAAK,OAAO,CAAC,WAAW,GAAG,QAAQ,CA8BG,IAxBxC,AADW,SAAS,aAAa,CAAC,QAC7B,MAAM,GACX,EAAgB,EAyBhB,EACF,EA6FkB,GAEhB,IAAM,EAAY,AAAA,EAAc,CAC9B,IAAK,MACL,UAAW,CAAC,cAAc,CAC1B,MAAO,CACT,GACM,EAAe,AAAA,EAAc,CACjC,IAAK,IACL,UAAW,CAAE,KAAM,GAAI,EACvB,UAAW,CAAC,gBAAgB,CAC5B,MAAO,CACT,GAIA,EAAa,gBAAgB,CAAC,QAAS,KACrC,IAAM,EAAe,EAAU,aAAa,CAAC,iBAC7C,EAAa,SAAS,CAAC,MAAM,CAAC,UAC9B,EAAa,SAAS,CAAC,MAAM,CAAC,iBAE1B,EAAa,SAAS,CAAC,QAAQ,CAAC,WAElC,AADuB,EAAa,gBAAgB,CAAC,iBACtC,OAAO,CAAC,AAAC,IACtB,EAAK,gBAAgB,CAAC,QAAS,KAC7B,EAAa,SAAS,CAAC,MAAM,CAAC,UAC9B,EAAa,SAAS,CAAC,MAAM,CAAC,gBAChC,EACF,EAEJ,GAEmB,AAAA,EAAc,CAC/B,IAAK,OACL,UAAW,CAAC,qBAAqB,CACjC,KAAM,gBACN,MAAO,CACT,GAjGA,AA9BF,SAAqC,CAAQ,EAC3C,IAAM,EAAa,CAAC,UAAW,UAAW,UAAW,UAAU,CAE/D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IAQrC,AAPkB,AAAA,EAAc,CAC9B,IAAK,IACL,UAAW,CAAC,eAAe,CAC3B,KAAM,CAAU,CAAC,EAAE,CACnB,MAAO,CACT,GAEU,gBAAgB,CAAC,QAAS,SAAU,CAAK,EACjD,QAAQ,GAAG,CAAC,iBAAkB,CAAU,CAAC,EAAE,EAE3C,AADW,SAAS,aAAa,CAAC,QAC7B,SAAS,CAAG,GAEjB,AAAA,EAAO,SAAS,CAAC,GACjB,EAAgB,AAAA,EAAO,MAAM,CAAC,EAAE,CAClC,EAEJ,EAIuB,AAAA,EAAc,CACjC,IAAK,MACL,UAAW,CAAC,eAAe,CAC3B,MAsGmB,CArGrB,GAsGF,IH3KA,AAAA,EAAO,mBAAmB,GAEtB,AAAgC,GAAhC,AAAA,EAAO,YAAY,GAAG,MAAM,CAC9B,AAAA,IAAW,IAAI,CAAC,AAAC,IACf,AAAA,EAAgB,GAChB,AAAA,EAAO,iBAAiB,CAAC,EAAO,aAChC,AAAA,EAAO,YAAY,CAAC,EACtB,GAEA,AAAA,EAAgB,AAAA,EAAO,YAAY","sources":["<anon>","src/scripts/script.js","src/scripts/boards.js","src/scripts/remote.js","src/scripts/header.js","src/scripts/elements.js","src/scripts/card-view.js","src/scripts/card-add-view.js","src/scripts/complaint-view.js","src/scripts/utils.js"],"sourcesContent":["//=====================\n// Переменные\nconst $4132573151169288$var$boards = {\n    0: [],\n    1: [],\n    2: [],\n    3: []\n};\nlet $4132573151169288$var$activeBoardIndex = 0;\n//=====================\n// Методы\nfunction $4132573151169288$var$getMainBoard() {\n    return $4132573151169288$var$boards[0];\n}\nfunction $4132573151169288$var$setMainBoard(data) {\n    $4132573151169288$var$boards[0] = data;\n}\nfunction $4132573151169288$var$getFromLocalStorage() {\n    $4132573151169288$var$boards[0] = JSON.parse(localStorage.getItem(\"cardArray\") ?? \"[]\");\n    $4132573151169288$var$boards[1] = JSON.parse(localStorage.getItem(\"cardArrayBoard1\") ?? \"[]\");\n    $4132573151169288$var$boards[2] = JSON.parse(localStorage.getItem(\"cardArrayBoard2\") ?? \"[]\");\n    $4132573151169288$var$boards[3] = JSON.parse(localStorage.getItem(\"cardArrayBoard3\") ?? \"[]\");\n}\nfunction $4132573151169288$var$setToLocalStorage(array, name) {\n    localStorage.setItem(name, JSON.stringify(array));\n}\n/**\n * Добавляет карточку на выбранную доску\n */ function $4132573151169288$var$addCardToBoard(cardData, boardIndex) {\n    $4132573151169288$var$boards[boardIndex].push(cardData);\n    $4132573151169288$var$setToLocalStorage($4132573151169288$var$boards[0], \"cardArray\");\n    $4132573151169288$var$setToLocalStorage($4132573151169288$var$boards[boardIndex], `cardArrayBoard${boardIndex}`);\n}\nfunction $4132573151169288$var$getActive() {\n    return $4132573151169288$var$activeBoardIndex;\n}\nfunction $4132573151169288$var$setActive(index) {\n    $4132573151169288$var$activeBoardIndex = index;\n}\nconst $4132573151169288$export$99dcc58dc2da531b = {\n    boards: $4132573151169288$var$boards,\n    getFromLocalStorage: $4132573151169288$var$getFromLocalStorage,\n    setToLocalStorage: $4132573151169288$var$setToLocalStorage,\n    addCardToBoard: $4132573151169288$var$addCardToBoard,\n    getActive: $4132573151169288$var$getActive,\n    setActive: $4132573151169288$var$setActive,\n    getMainBoard: $4132573151169288$var$getMainBoard,\n    setMainBoard: $4132573151169288$var$setMainBoard\n};\n\n\nasync function $400f72d9efa8d549$export$bc61c71d8347e4d9() {\n    const response = await fetch(\"https://65d85342c96fbb24c1bb40ab.mockapi.io/api/pintrest/PinterestClone\");\n    return await response.json();\n}\n\n\n\n// Создает элемент с указанными свойствами\nfunction $22fc9c14ea32729d$export$c8a8987d4410bf2d({ tag: tag, className: className, place: place, text: text, attribute: attribute }) {\n    const someElem = document.createElement(tag);\n    className.forEach((element)=>{\n        someElem.classList.add(element);\n    });\n    if (text) someElem.innerText = text;\n    if (attribute) for(key in attribute)someElem.setAttribute(`${key}`, `${attribute[key]}`);\n    if (place) place.append(someElem);\n    return someElem;\n}\nfunction $22fc9c14ea32729d$export$73d5e858ad593266(label, klass, id, parent) {\n    const button = $22fc9c14ea32729d$export$c8a8987d4410bf2d({\n        tag: \"button\",\n        className: [\n            klass\n        ],\n        attribute: {\n            id: [\n                id\n            ]\n        },\n        place: parent,\n        text: label\n    });\n    return button;\n}\n\n\n\n\n\n//-----  Создает список доступных досок ------\nfunction $8dd3361d31a56b86$var$createBoardsOptions(parent, card, nameBoards) {\n    for(let j = 1; j < nameBoards.length; j++){\n        const linkBoard = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n            tag: \"a\",\n            className: [\n                \"list__item\"\n            ],\n            attribute: {\n                href: \"#\"\n            },\n            text: nameBoards[j],\n            place: parent\n        });\n        linkBoard.addEventListener(\"click\", function() {\n            const cards = (0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard();\n            const index = cards.findIndex((item)=>{\n                return item.id === card.data.id;\n            });\n            if (index !== -1) {\n                (0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard().splice(index, 1);\n                (0, $4132573151169288$export$99dcc58dc2da531b).addCardToBoard(card.data, j);\n            }\n            //удаляет html элемент карточки\n            if (card.view) {\n                card.view.remove();\n                card.view = null;\n            }\n        });\n    }\n}\n// Окно добавления на доску\n//-------- Создает модальное окно для добавления карточки на доску\nfunction $8dd3361d31a56b86$export$73585f01aa5364e7(parent, card) {\n    const modalAdd = document.createElement(\"div\");\n    modalAdd.className = \"modal-add\";\n    parent.append(modalAdd);\n    const modalAddContainer = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal-add__container\"\n        ],\n        place: modalAdd\n    });\n    const modalAddBoards = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal-add__boards\"\n        ],\n        place: modalAddContainer\n    });\n    const modalAddTitle = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal-add__title\"\n        ],\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0430 \\u0434\\u043E\\u0441\\u043A\\u0443\",\n        place: modalAddBoards\n    });\n    //доски с оберткой\n    const modalAddList = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal-add__list\"\n        ],\n        place: modalAddBoards\n    });\n    $8dd3361d31a56b86$var$createBoardsOptions(modalAddList, card, [\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 0\",\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 1\",\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 2\",\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 3\"\n    ]);\n    const modalAddFooter = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal-add__footer\"\n        ],\n        place: modalAddBoards\n    });\n    const modalAddClose = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"button\",\n        className: [\n            \"modal-add__close\"\n        ],\n        text: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        place: modalAddFooter\n    });\n    //Закрытие и удаление модального окна \"Добавить на доску\"\n    modalAddClose.addEventListener(\"click\", ()=>{\n        modalAdd.remove();\n    });\n}\n\n\n\n//Модальное окно пожаловаться\n// Создает окно жалобы\nfunction $9aa8d9897853990d$export$95314f85b0d47a92(parent) {\n    const rootDiv = document.createElement(\"div\");\n    rootDiv.className = \"modal\";\n    parent.append(rootDiv);\n    const body = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal_body\"\n        ],\n        place: rootDiv\n    });\n    const content = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal_content\"\n        ],\n        place: body\n    });\n    const title = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal_title\"\n        ],\n        text: \"\\u0416\\u0430\\u043B\\u043E\\u0431\\u0430 \\u043D\\u0430 \\u043F\\u0438\\u043D\",\n        place: content\n    });\n    //чекбоксы с оберткой\n    const text = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal_text\"\n        ],\n        place: content\n    });\n    const arrText = [\n        \"\\u0421\\u043F\\u0430\\u043C\",\n        \"\\u0427\\u043B\\u0435\\u043D\\u043E\\u0432\\u0440\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u0441\\u0442\\u0432\\u043E\",\n        \"\\u041B\\u043E\\u0436\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n        \"\\u0410\\u0433\\u0440\\u0435\\u0441\\u0441\\u0438\\u0432\\u043D\\u044B\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\",\n        \"\\u041E\\u043F\\u0430\\u0441\\u043D\\u044B\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u044B\",\n        \"\\u041F\\u0440\\u0435\\u0441\\u043B\\u0435\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0438\\u043B\\u0438 \\u043A\\u0440\\u0438\\u0442\\u0438\\u043A\\u0430\",\n        \"\\u0421\\u0446\\u0435\\u043D\\u044B \\u043D\\u0430\\u0441\\u0438\\u043B\\u0438\\u044F\",\n        \"\\u041D\\u0430\\u0440\\u0443\\u0448\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n    ];\n    for(let i = 0; i <= arrText.length - 1; i++){\n        const label = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n            tag: \"label\",\n            className: [\n                \"modal_label\"\n            ],\n            text: arrText[i],\n            place: text\n        });\n        (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n            tag: \"input\",\n            className: [\n                \"modal_checkbox\"\n            ],\n            attribute: {\n                type: \"checkbox\"\n            },\n            place: label\n        });\n        (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n            tag: \"span\",\n            className: [\n                \"modal_span\"\n            ],\n            place: label\n        });\n    }\n    const footer = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"modal_footer\"\n        ],\n        place: content\n    });\n    const buttonClose = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"button\",\n        className: [\n            \"modal_close\"\n        ],\n        text: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n        place: footer\n    });\n    const buttonSubmit = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"button\",\n        className: [\n            \"modal_submit\"\n        ],\n        text: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        place: footer\n    });\n    const buttonSubmitSpinner = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"span\",\n        className: [\n            \"spinner\"\n        ],\n        place: buttonSubmit\n    });\n    // При нажатии на кнопку \"отмена\", закрыть и удалить модальное окно\n    buttonClose.addEventListener(\"click\", ()=>{\n        rootDiv.remove();\n    });\n    // При нажатии на кнопку\"отправить\",срабатывает спиннер +\n    // закрывается модальное окно + срабатывает alert для экранов >=1024\n    buttonSubmit.addEventListener(\"click\", ()=>{\n        buttonSubmit.style.display = \"block\";\n        buttonSubmitSpinner.style.display = \"flex\";\n        buttonSubmitSpinner.classList.add(\"spin\");\n        setTimeout(()=>{\n            buttonSubmitSpinner.style.display = \"none\";\n            rootDiv.remove();\n            setTimeout(()=>{\n                if (window.innerWidth >= 1024) alert(\"\\u0412\\u0430\\u0448\\u0430 \\u0436\\u0430\\u043B\\u043E\\u0431\\u0430 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430!\");\n            }, 700);\n        }, 1500);\n    });\n    //Окраска текста при клике на чекбокс\n    const selectors = rootDiv.querySelectorAll(\".modal_label\");\n    for (const selector of selectors)selector.addEventListener(\"click\", (e)=>{\n        const container = e.currentTarget;\n        if (container.firstElementChild.checked) container.style.color = \"red\";\n        else container.style.color = \"black\";\n    });\n}\n\n\nconst $c7997aef068a9f19$export$5464853d700fc7c4 = function(array) {\n    return array[Math.floor(Math.random() * array.length)];\n};\n\n\nconst $60bac596ad97dc2b$var$heights = [\n    200,\n    260,\n    280,\n    300,\n    240\n];\nfunction $60bac596ad97dc2b$export$8eeb769840919628(cardObj) {\n    const card = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"card\"\n        ]\n    });\n    //карточки с рандомной высотой\n    const height = (0, $c7997aef068a9f19$export$5464853d700fc7c4)($60bac596ad97dc2b$var$heights);\n    const image = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"img\",\n        className: [\n            \"card-picture\"\n        ],\n        attribute: {\n            src: cardObj.data.picture + \"?random=\" + cardObj.data.id,\n            height: height + \"px\",\n            width: \"640px\"\n        },\n        place: card\n    });\n    const content = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"card-content\"\n        ],\n        place: card\n    });\n    const avatarElement = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"img\",\n        className: [\n            \"card-avatar\"\n        ],\n        attribute: {\n            src: cardObj.data.avatar\n        },\n        place: content\n    });\n    const hashtagElement = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"card-hashtag\"\n        ],\n        text: `#${cardObj.data.hashtag}`,\n        place: content\n    });\n    return card;\n}\nfunction $60bac596ad97dc2b$export$e6e3f2e4fee406dd(cardObj) {\n    const pin = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"pin-menu\"\n        ],\n        place: cardObj.view\n    });\n    const buttonAdd = (0, $22fc9c14ea32729d$export$73d5e858ad593266)(\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0430 \\u0434\\u043E\\u0441\\u043A\\u0443\", \"pin-menu__button\", \"button-add\", pin);\n    const buttonComplain = (0, $22fc9c14ea32729d$export$73d5e858ad593266)(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\", \"pin-menu__button\", \"button-complain\", pin);\n    //--------- Открытие окна добавления карточки ---------\n    buttonAdd.addEventListener(\"click\", ()=>{\n        (0, $8dd3361d31a56b86$export$73585f01aa5364e7)(document.querySelector(\"#root\"), cardObj);\n    });\n    //----------- Открытие окна жалоб -----------\n    buttonComplain.addEventListener(\"click\", ()=>{\n        (0, $9aa8d9897853990d$export$95314f85b0d47a92)(document.querySelector(\"#root\"));\n    });\n    cardObj.view.addEventListener(\"mouseover\", function() {\n        pin.style.display = \"flex\";\n    });\n    cardObj.view.addEventListener(\"mouseout\", function() {\n        pin.style.display = \"none\";\n    });\n}\n\n\n//=================================\n// Заголовок страницы\nfunction $89a3a1dba1b24509$var$searchByLetters(searchTerm, cards) {\n    return cards.filter((card)=>card.hashtag.toLowerCase().includes(searchTerm));\n}\nfunction $89a3a1dba1b24509$var$updateSearchResults(results) {\n    let main = document.querySelector(\"main\");\n    main.remove();\n    $89a3a1dba1b24509$export$b431221794459d5f(results);\n}\n// Создает строку поиска\nfunction $89a3a1dba1b24509$var$createSearchBar(parent) {\n    const inputNav = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"input\",\n        className: [\n            \"navigation__input\"\n        ],\n        text: undefined,\n        attribute: {\n            type: \"search\",\n            placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\"\n        },\n        place: parent\n    });\n    inputNav.addEventListener(\"input\", function(event) {\n        const searchTerm = event.target.value.toLowerCase();\n        // поиск и отображение результатов\n        const boards = (0, $4132573151169288$export$99dcc58dc2da531b).boards;\n        const active = (0, $4132573151169288$export$99dcc58dc2da531b).getActive();\n        const board = active !== -1 ? boards[active] : (0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard();\n        const searchResults = $89a3a1dba1b24509$var$searchByLetters(searchTerm, board);\n        $89a3a1dba1b24509$var$updateSearchResults(searchResults);\n    });\n}\n// Создает элементы выпадающего списка досок\nfunction $89a3a1dba1b24509$var$createBoardsDropdownOptions(dropdown) {\n    const nameBoards = [\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 0\",\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 1\",\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 2\",\n        \"\\u0414\\u043E\\u0441\\u043A\\u0430 3\"\n    ];\n    for(let j = 1; j < nameBoards.length; j++){\n        const linkBoard = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n            tag: \"a\",\n            className: [\n                \"Boards__item\"\n            ],\n            text: nameBoards[j],\n            place: dropdown\n        });\n        linkBoard.addEventListener(\"click\", function(event) {\n            console.log(\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u0430 \\u0434\\u043E\\u0441\\u043A\\u0430:\", nameBoards[j]);\n            let main = document.querySelector(\"main\");\n            main.innerHTML = \"\";\n            (0, $4132573151169288$export$99dcc58dc2da531b).setActive(j);\n            $89a3a1dba1b24509$export$b431221794459d5f((0, $4132573151169288$export$99dcc58dc2da531b).boards[j]);\n        });\n    }\n}\n// Создает выпадающие список досок\nfunction $89a3a1dba1b24509$var$createBoardsDropdown(parent) {\n    const dropdownMenu = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"Boards__menu\"\n        ],\n        place: parent\n    });\n    $89a3a1dba1b24509$var$createBoardsDropdownOptions(dropdownMenu);\n    return dropdownMenu;\n}\n// Создает заголовок страницы\nfunction $89a3a1dba1b24509$export$798e69447a57ffe5() {\n    const header = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"header\",\n        className: [\n            \"header\"\n        ],\n        place: root\n    });\n    const headerContainer = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"header__container\"\n        ],\n        place: header\n    });\n    const navBlock = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"nav\",\n        className: [\n            \"navigation\"\n        ],\n        place: headerContainer\n    });\n    const linkNav = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"link__nav\"\n        ],\n        place: navBlock\n    });\n    const linkNavSpan = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"span\",\n        className: [\n            \"link__nav-text\"\n        ],\n        text: \"Pinterest\",\n        place: linkNav\n    });\n    // Банер страницы\n    const imgLink = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"img\",\n        className: [\n            \"link__img\"\n        ],\n        attribute: {\n            src: \"https://i.pinimg.com/280x280_RS/f6/e9/3a/f6e93a06b500b2d87ffd32e1f56f7c6f.jpg\",\n            alt: \"Pinterest logo\"\n        },\n        place: linkNav\n    });\n    // при загружает грид с главной страницы\n    imgLink.addEventListener(\"click\", function() {\n        (0, $4132573151169288$export$99dcc58dc2da531b).setActive(0);\n        $89a3a1dba1b24509$export$b431221794459d5f((0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard());\n    });\n    const divInput = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"div__input-icon\"\n        ],\n        place: navBlock\n    });\n    $89a3a1dba1b24509$var$createSearchBar(divInput);\n    const divButton = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"div__button\"\n        ],\n        place: divInput\n    });\n    const buttonBoards = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"a\",\n        attribute: {\n            href: \"#\"\n        },\n        className: [\n            \"button-boards\"\n        ],\n        place: divButton\n    });\n    //при клике одновременно срабатывает бургер \"Х\" и выпадает меню досок\n    //и при клике на любую из досок модальное окно закрывается и бургер\n    //возвращается в исходное положение\n    buttonBoards.addEventListener(\"click\", ()=>{\n        const dropdownMenu = divButton.querySelector(\".Boards__menu\");\n        dropdownMenu.classList.toggle(\"active\");\n        buttonBoards.classList.toggle(\"active-burger\");\n        if (dropdownMenu.classList.contains(\"active\")) {\n            const allBoardsItems = dropdownMenu.querySelectorAll(\".Boards__item\");\n            allBoardsItems.forEach((item)=>{\n                item.addEventListener(\"click\", ()=>{\n                    dropdownMenu.classList.remove(\"active\");\n                    buttonBoards.classList.remove(\"active-burger\");\n                });\n            });\n        }\n    });\n    const spanButton = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"span\",\n        className: [\n            \"button-boards_span\"\n        ],\n        text: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0434\\u043E\\u0441\\u043A\\u0443\",\n        place: buttonBoards\n    });\n    $89a3a1dba1b24509$var$createBoardsDropdown(divButton);\n}\n/**\n * Создает список доступных досок\n */ function $89a3a1dba1b24509$var$createBoardsOptions(parent, cardData, nameBoards) {\n    for(let j = 1; j <= nameBoards.length; j++){\n        const linkBoard = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n            tag: \"a\",\n            className: [\n                \"list__item\"\n            ],\n            attribute: {\n                href: \"#\"\n            },\n            text: nameBoards[j],\n            place: parent\n        });\n        linkBoard.addEventListener(\"click\", function() {\n            const index = (0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard().findIndex((item)=>item.id === cardData.id);\n            if (index !== -1) {\n                (0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard().splice(index, 1);\n                addCardToBoard(cardData, j);\n            }\n            cardData.view.remove();\n            cardData.view = null;\n        });\n    }\n}\n// Создает сетку карточек\nfunction $89a3a1dba1b24509$export$b431221794459d5f(cards) {\n    const oldMain = document.querySelector(\"main\");\n    if (oldMain) oldMain.remove();\n    const main = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"main\",\n        className: [\n            \"main\"\n        ],\n        place: root\n    });\n    const mainContainer = (0, $22fc9c14ea32729d$export$c8a8987d4410bf2d)({\n        tag: \"div\",\n        className: [\n            \"main__container\"\n        ],\n        place: main\n    });\n    for (const cardData of cards){\n        const card = {\n            data: cardData\n        };\n        card.view = (0, $60bac596ad97dc2b$export$8eeb769840919628)(card);\n        card.pin = (0, $60bac596ad97dc2b$export$e6e3f2e4fee406dd)(card);\n        mainContainer.append(card.view);\n    }\n}\n\n\n(0, $89a3a1dba1b24509$export$798e69447a57ffe5)();\n(0, $4132573151169288$export$99dcc58dc2da531b).getFromLocalStorage();\nif ((0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard().length == 0) (0, $400f72d9efa8d549$export$bc61c71d8347e4d9)().then((cards)=>{\n    (0, $89a3a1dba1b24509$export$b431221794459d5f)(cards);\n    (0, $4132573151169288$export$99dcc58dc2da531b).setToLocalStorage(cards, \"cardArray\");\n    (0, $4132573151169288$export$99dcc58dc2da531b).setMainBoard(cards);\n});\nelse (0, $89a3a1dba1b24509$export$b431221794459d5f)((0, $4132573151169288$export$99dcc58dc2da531b).getMainBoard());\n\n\n//# sourceMappingURL=index.c5aafb72.js.map\n","import { Boards } from \"./boards.js\";\nimport { getCards } from \"./remote.js\";\nimport { createHeader, createCardsGrid } from \"./header.js\";\n\ncreateHeader();\nBoards.getFromLocalStorage();\n\nif (Boards.getMainBoard().length == 0) {\n  getCards().then((cards) => {\n    createCardsGrid(cards);\n    Boards.setToLocalStorage(cards, \"cardArray\");\n    Boards.setMainBoard(cards);\n  });\n} else {\n  createCardsGrid(Boards.getMainBoard());\n}\n","//=====================\n// Переменные\n\nconst boards = {\n  0: [], //CardArray\n  1: [], //CardArrayBoard1\n  2: [], //CardArrayBoard2\n  3: [], //CardArrayBoard3\n};\n\nlet activeBoardIndex = 0;\n\n//=====================\n// Методы\n\nfunction getMainBoard() {\n  return boards[0];\n}\n\nfunction setMainBoard(data) {\n  boards[0] = data;\n}\n\nfunction getFromLocalStorage() {\n  boards[0] = JSON.parse(localStorage.getItem(\"cardArray\") ?? \"[]\");\n  boards[1] = JSON.parse(localStorage.getItem(\"cardArrayBoard1\") ?? \"[]\");\n  boards[2] = JSON.parse(localStorage.getItem(\"cardArrayBoard2\") ?? \"[]\");\n  boards[3] = JSON.parse(localStorage.getItem(\"cardArrayBoard3\") ?? \"[]\");\n}\n\nfunction setToLocalStorage(array, name) {\n  localStorage.setItem(name, JSON.stringify(array));\n}\n\n/**\n * Добавляет карточку на выбранную доску\n */\nfunction addCardToBoard(cardData, boardIndex) {\n  boards[boardIndex].push(cardData);\n  setToLocalStorage(boards[0], \"cardArray\");\n  setToLocalStorage(boards[boardIndex], `cardArrayBoard${boardIndex}`);\n}\n\nfunction getActive() {\n  return activeBoardIndex;\n}\n\nfunction setActive(index) {\n  activeBoardIndex = index;\n}\n\nconst Boards = {\n  boards,\n  getFromLocalStorage,\n  setToLocalStorage,\n  addCardToBoard,\n  getActive,\n  setActive,\n  getMainBoard,\n  setMainBoard,\n};\n\nexport { Boards };\n","async function getCards() {\n  const response = await fetch(\n    \"https://65d85342c96fbb24c1bb40ab.mockapi.io/api/pintrest/PinterestClone\"\n  );\n\n  return await response.json();\n}\n\nexport { getCards };\n","import { Boards } from \"./boards.js\";\nimport { createElement } from \"./elements.js\";\nimport { Card } from \"./card-view.js\";\nimport { createCardView, createPinView } from \"./card-view.js\";\n\n//=================================\n// Заголовок страницы\n\nfunction searchByLetters(searchTerm, cards) {\n  return cards.filter((card) =>\n    card.hashtag.toLowerCase().includes(searchTerm)\n  );\n}\n\nfunction updateSearchResults(results) {\n  let main = document.querySelector(\"main\");\n  main.remove();\n  createCardsGrid(results);\n}\n\n// Создает строку поиска\nfunction createSearchBar(parent) {\n  const inputNav = createElement({\n    tag: \"input\",\n    className: [\"navigation__input\"],\n    text: undefined,\n    attribute: {\n      type: \"search\",\n      placeholder: \"Поиск...\",\n    },\n    place: parent,\n  });\n\n  inputNav.addEventListener(\"input\", function (event) {\n    const searchTerm = event.target.value.toLowerCase();\n\n    // поиск и отображение результатов\n    const boards = Boards.boards;\n    const active = Boards.getActive();\n    const board = active !== -1 ? boards[active] : Boards.getMainBoard();\n    const searchResults = searchByLetters(searchTerm, board);\n    updateSearchResults(searchResults);\n  });\n}\n\n// Создает элементы выпадающего списка досок\nfunction createBoardsDropdownOptions(dropdown) {\n  const nameBoards = [\"Доска 0\", \"Доска 1\", \"Доска 2\", \"Доска 3\"];\n\n  for (let j = 1; j < nameBoards.length; j++) {\n    const linkBoard = createElement({\n      tag: \"a\",\n      className: [\"Boards__item\"],\n      text: nameBoards[j],\n      place: dropdown,\n    });\n\n    linkBoard.addEventListener(\"click\", function (event) {\n      console.log(\"Выбрана доска:\", nameBoards[j]);\n      let main = document.querySelector(\"main\");\n      main.innerHTML = \"\";\n\n      Boards.setActive(j);\n      createCardsGrid(Boards.boards[j]);\n    });\n  }\n}\n\n// Создает выпадающие список досок\nfunction createBoardsDropdown(parent) {\n  const dropdownMenu = createElement({\n    tag: \"div\",\n    className: [\"Boards__menu\"],\n    place: parent,\n  });\n\n  createBoardsDropdownOptions(dropdownMenu);\n\n  return dropdownMenu;\n}\n\n// Создает заголовок страницы\nfunction createHeader() {\n  const header = createElement({\n    tag: \"header\",\n    className: [\"header\"],\n    place: root,\n  });\n\n  const headerContainer = createElement({\n    tag: \"div\",\n    className: [\"header__container\"],\n    place: header,\n  });\n\n  const navBlock = createElement({\n    tag: \"nav\",\n    className: [\"navigation\"],\n    place: headerContainer,\n  });\n\n  const linkNav = createElement({\n    tag: \"div\",\n    className: [\"link__nav\"],\n    place: navBlock,\n  });\n\n  const linkNavSpan = createElement({\n    tag: \"span\",\n    className: [\"link__nav-text\"],\n    text: \"Pinterest\",\n    place: linkNav,\n  });\n  // Банер страницы\n  const imgLink = createElement({\n    tag: \"img\",\n    className: [\"link__img\"],\n    attribute: {\n      src: \"https://i.pinimg.com/280x280_RS/f6/e9/3a/f6e93a06b500b2d87ffd32e1f56f7c6f.jpg\",\n      alt: \"Pinterest logo\",\n    },\n    place: linkNav,\n  });\n\n  // при загружает грид с главной страницы\n  imgLink.addEventListener(\"click\", function () {\n    Boards.setActive(0);\n    createCardsGrid(Boards.getMainBoard());\n  });\n\n  const divInput = createElement({\n    tag: \"div\",\n    className: [\"div__input-icon\"],\n    place: navBlock,\n  });\n\n  createSearchBar(divInput);\n\n  const divButton = createElement({\n    tag: \"div\",\n    className: [\"div__button\"],\n    place: divInput,\n  });\n  const buttonBoards = createElement({\n    tag: \"a\",\n    attribute: { href: \"#\" },\n    className: [\"button-boards\"],\n    place: divButton,\n  });\n  //при клике одновременно срабатывает бургер \"Х\" и выпадает меню досок\n  //и при клике на любую из досок модальное окно закрывается и бургер\n  //возвращается в исходное положение\n  buttonBoards.addEventListener(\"click\", () => {\n    const dropdownMenu = divButton.querySelector(\".Boards__menu\");\n    dropdownMenu.classList.toggle(\"active\");\n    buttonBoards.classList.toggle(\"active-burger\");\n\n    if (dropdownMenu.classList.contains(\"active\")) {\n      const allBoardsItems = dropdownMenu.querySelectorAll(\".Boards__item\");\n      allBoardsItems.forEach((item) => {\n        item.addEventListener(\"click\", () => {\n          dropdownMenu.classList.remove(\"active\");\n          buttonBoards.classList.remove(\"active-burger\");\n        });\n      });\n    }\n  });\n\n  const spanButton = createElement({\n    tag: \"span\",\n    className: [\"button-boards_span\"],\n    text: \"Выбрать доску\",\n    place: buttonBoards,\n  });\n\n  createBoardsDropdown(divButton);\n}\n\n/**\n * Создает список доступных досок\n */\nfunction createBoardsOptions(parent, cardData, nameBoards) {\n  for (let j = 1; j <= nameBoards.length; j++) {\n    const linkBoard = createElement({\n      tag: \"a\",\n      className: [\"list__item\"],\n      attribute: { href: \"#\" },\n      text: nameBoards[j],\n      place: parent,\n    });\n\n    linkBoard.addEventListener(\"click\", function () {\n      const index = Boards.getMainBoard().findIndex(\n        (item) => item.id === cardData.id\n      );\n      if (index !== -1) {\n        Boards.getMainBoard().splice(index, 1);\n        addCardToBoard(cardData, j);\n      }\n      cardData.view.remove();\n      cardData.view = null;\n    });\n  }\n}\n\n// Создает сетку карточек\nfunction createCardsGrid(cards) {\n  const oldMain = document.querySelector(\"main\");\n  if (oldMain) {\n    oldMain.remove();\n  }\n  const main = createElement({\n    tag: \"main\",\n    className: [\"main\"],\n    place: root,\n  });\n\n  const mainContainer = createElement({\n    tag: \"div\",\n    className: [\"main__container\"],\n    place: main,\n  });\n\n  for (const cardData of cards) {\n    const card = { data: cardData };\n    card.view = createCardView(card);\n    card.pin = createPinView(card);\n    mainContainer.append(card.view);\n  }\n}\n\nexport { createHeader, createCardsGrid };\n","// Создает элемент с указанными свойствами\nfunction createElement({ tag, className, place, text, attribute }) {\n  const someElem = document.createElement(tag);\n  className.forEach((element) => {\n    someElem.classList.add(element);\n  });\n  if (text) {\n    someElem.innerText = text;\n  }\n  if (attribute) {\n    for (key in attribute) {\n      someElem.setAttribute(`${key}`, `${attribute[key]}`);\n    }\n  }\n\n  if ( place ) {\n    place.append(someElem);\n  }\n\n  return someElem;\n}\n\nfunction createButtonElement(label, klass, id, parent) {\n  const button = createElement({\n    tag: \"button\",\n    className: [klass],\n    attribute: {\n      id: [id],\n    },\n    place: parent,\n    text: label,\n  });\n\n  return button;\n}\n\nexport { createElement, createButtonElement };\n","import { createElement, createButtonElement } from \"./elements.js\";\nimport { createModalAdd } from \"./card-add-view.js\";\nimport { createComplaintWindow } from \"./complaint-view.js\";\nimport { getRandomArrayElement } from \"./utils.js\";\n\nconst heights = [200, 260, 280, 300, 240];\n\nfunction createCardView(cardObj) {\n  const card = createElement({\n    tag: \"div\",\n    className: [\"card\"],\n  });\n\n  //карточки с рандомной высотой\n\n  const height = getRandomArrayElement(heights);\n\n  const image = createElement({\n    tag: \"img\",\n    className: [\"card-picture\"],\n    attribute: {\n      src: cardObj.data.picture + \"?random=\" + cardObj.data.id,\n      height: height + \"px\",\n      width: \"640px\",\n    },\n    place: card,\n  });\n\n  const content = createElement({\n    tag: \"div\",\n    className: [\"card-content\"],\n    place: card,\n  });\n\n  const avatarElement = createElement({\n    tag: \"img\",\n    className: [\"card-avatar\"],\n    attribute: { src: cardObj.data.avatar },\n    place: content,\n  });\n  const hashtagElement = createElement({\n    tag: \"div\",\n    className: [\"card-hashtag\"],\n    text: `#${cardObj.data.hashtag}`,\n    place: content,\n  });\n  return card;\n}\n\nfunction createPinView(cardObj) {\n  const pin = createElement({\n    tag: \"div\",\n    className: [\"pin-menu\"],\n    place: cardObj.view,\n  });\n\n  const buttonAdd = createButtonElement(\n    \"Добавить на доску\",\n    \"pin-menu__button\",\n    \"button-add\",\n    pin\n  );\n  const buttonComplain = createButtonElement(\n    \"Пожаловаться\",\n    \"pin-menu__button\",\n    \"button-complain\",\n    pin\n  );\n\n  //--------- Открытие окна добавления карточки ---------\n  buttonAdd.addEventListener(\"click\", () => {\n    createModalAdd(document.querySelector(\"#root\"), cardObj);\n  });\n\n  //----------- Открытие окна жалоб -----------\n  buttonComplain.addEventListener(\"click\", () => {\n    createComplaintWindow(document.querySelector(\"#root\"));\n  });\n\n  cardObj.view.addEventListener(\"mouseover\", function () {\n    pin.style.display = \"flex\";\n  });\n\n  cardObj.view.addEventListener(\"mouseout\", function () {\n    pin.style.display = \"none\";\n  });\n}\n\nexport { createCardView, createPinView };\n","import { createElement } from \"./elements.js\";\nimport { Boards } from \"./boards.js\";\n\n//-----  Создает список доступных досок ------\n\nfunction createBoardsOptions(parent, card, nameBoards) {\n  for (let j = 1; j < nameBoards.length; j++) {\n    const linkBoard = createElement({\n      tag: \"a\",\n      className: [\"list__item\"],\n      attribute: { href: \"#\" },\n      text: nameBoards[j],\n      place: parent,\n    });\n\n    linkBoard.addEventListener(\"click\", function () {\n      const cards = Boards.getMainBoard();\n      const index = cards.findIndex((item) => {\n        return item.id === card.data.id;\n      });\n\n      if (index !== -1) {\n        Boards.getMainBoard().splice(index, 1);\n        Boards.addCardToBoard(card.data, j);\n      }\n//удаляет html элемент карточки\n      if (card.view) {\n        card.view.remove();\n        card.view = null;\n      }\n    });\n  }\n}\n\n// Окно добавления на доску\n\n//-------- Создает модальное окно для добавления карточки на доску\n\nfunction createModalAdd(parent, card) {\n  const modalAdd = document.createElement(\"div\");\n  modalAdd.className = \"modal-add\";\n  parent.append(modalAdd);\n\n  const modalAddContainer = createElement({\n    tag: \"div\",\n    className: [\"modal-add__container\"],\n    place: modalAdd,\n  });\n\n  const modalAddBoards = createElement({\n    tag: \"div\",\n    className: [\"modal-add__boards\"],\n    place: modalAddContainer,\n  });\n\n  const modalAddTitle = createElement({\n    tag: \"div\",\n    className: [\"modal-add__title\"],\n    text: \"Добавить на доску\",\n    place: modalAddBoards,\n  });\n\n  //доски с оберткой\n  const modalAddList = createElement({\n    tag: \"div\",\n    className: [\"modal-add__list\"],\n    place: modalAddBoards,\n  });\n\n  createBoardsOptions(modalAddList, card, [\n    \"Доска 0\",\n    \"Доска 1\",\n    \"Доска 2\",\n    \"Доска 3\",\n  ]);\n\n  const modalAddFooter = createElement({\n    tag: \"div\",\n    className: [\"modal-add__footer\"],\n    place: modalAddBoards,\n  });\n\n  const modalAddClose = createElement({\n    tag: \"button\",\n    className: [\"modal-add__close\"],\n    text: \"Закрыть\",\n    place: modalAddFooter,\n  });\n\n  //Закрытие и удаление модального окна \"Добавить на доску\"\n  modalAddClose.addEventListener(\"click\", () => {\n    modalAdd.remove();\n  });\n}\n\nexport { createModalAdd };\n","import { createElement } from \"./elements.js\";\n\n//Модальное окно пожаловаться\n\n// Создает окно жалобы\nfunction createComplaintWindow(parent) {\n  const rootDiv = document.createElement(\"div\");\n  rootDiv.className = \"modal\";\n  parent.append(rootDiv);\n\n  const body = createElement({\n    tag: \"div\",\n    className: [\"modal_body\"],\n    place: rootDiv,\n  });\n\n  const content = createElement({\n    tag: \"div\",\n    className: [\"modal_content\"],\n    place: body,\n  });\n\n  const title = createElement({\n    tag: \"div\",\n    className: [\"modal_title\"],\n    text: \"Жалоба на пин\",\n    place: content,\n  });\n\n  //чекбоксы с оберткой\n  const text = createElement({\n    tag: \"div\",\n    className: [\"modal_text\"],\n    place: content,\n  });\n\n  const arrText = [\n    \"Спам\",\n    \"Членовредительство\",\n    \"Ложная информация\",\n    \"Агрессивные действия\",\n    \"Опасные товары\",\n    \"Преследование или критика\",\n    \"Сцены насилия\",\n    \"Нарушение конфиденциальности\",\n  ];\n  for (let i = 0; i <= arrText.length - 1; i++) {\n    const label = createElement({\n      tag: \"label\",\n      className: [\"modal_label\"],\n      text: arrText[i],\n      place: text,\n    });\n\n    createElement({\n      tag: \"input\",\n      className: [\"modal_checkbox\"],\n      attribute: {\n        type: \"checkbox\",\n      },\n      place: label,\n    });\n\n    createElement({\n      tag: \"span\",\n      className: [\"modal_span\"],\n      place: label,\n    });\n  }\n\n  const footer = createElement({\n    tag: \"div\",\n    className: [\"modal_footer\"],\n    place: content,\n  });\n\n  const buttonClose = createElement({\n    tag: \"button\",\n    className: [\"modal_close\"],\n    text: \"Отмена\",\n    place: footer,\n  });\n\n  const buttonSubmit = createElement({\n    tag: \"button\",\n    className: [\"modal_submit\"],\n    text: \"Отправить\",\n    place: footer,\n  });\n  const buttonSubmitSpinner = createElement({\n    tag: \"span\",\n    className: [\"spinner\"],\n    place: buttonSubmit,\n  });\n\n  // При нажатии на кнопку \"отмена\", закрыть и удалить модальное окно\n  buttonClose.addEventListener(\"click\", () => {\n    rootDiv.remove();\n  });\n\n  // При нажатии на кнопку\"отправить\",срабатывает спиннер +\n  // закрывается модальное окно + срабатывает alert для экранов >=1024\n  buttonSubmit.addEventListener(\"click\", () => {\n    buttonSubmit.style.display = \"block\";\n    buttonSubmitSpinner.style.display = \"flex\";\n    buttonSubmitSpinner.classList.add(\"spin\");\n    setTimeout(() => {\n      buttonSubmitSpinner.style.display = \"none\";\n      rootDiv.remove();\n\n      setTimeout(() => {\n        if (window.innerWidth >= 1024) {\n          alert(\"Ваша жалоба отправлена!\");\n        }\n      }, 700);\n    }, 1500);\n  });\n\n  //Окраска текста при клике на чекбокс\n  const selectors = rootDiv.querySelectorAll(\".modal_label\");\n  for (const selector of selectors) {\n    selector.addEventListener(\"click\", (e) => {\n      const container = e.currentTarget;\n      if (container.firstElementChild.checked) {\n        container.style.color = \"red\";\n      } else {\n        container.style.color = \"black\";\n      }\n    });\n  }\n}\n\nexport { createComplaintWindow };\n","const getRandomArrayElement = function (array) {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nexport { getRandomArrayElement };\n"],"names":["$4132573151169288$var$boards","$4132573151169288$var$activeBoardIndex","$4132573151169288$var$setToLocalStorage","array","name","localStorage","setItem","JSON","stringify","$4132573151169288$export$99dcc58dc2da531b","boards","getFromLocalStorage","parse","getItem","setToLocalStorage","addCardToBoard","cardData","boardIndex","push","getActive","setActive","index","getMainBoard","setMainBoard","data","$400f72d9efa8d549$export$bc61c71d8347e4d9","response","fetch","json","$22fc9c14ea32729d$export$c8a8987d4410bf2d","tag","className","place","text","attribute","someElem","document","createElement","forEach","element","classList","add","innerText","key","setAttribute","append","$22fc9c14ea32729d$export$73d5e858ad593266","label","klass","id","parent","$60bac596ad97dc2b$var$heights","$89a3a1dba1b24509$export$b431221794459d5f","cards","oldMain","querySelector","remove","main","root","mainContainer","card","view","cardObj","height","Math","floor","random","length","src","picture","width","content","avatar","hashtag","pin","buttonAdd","buttonComplain","addEventListener","modalAdd","modalAddContainer","modalAddBoards","$8dd3361d31a56b86$var$createBoardsOptions","nameBoards","j","linkBoard","href","findIndex","item","splice","modalAddFooter","modalAddClose","rootDiv","body","arrText","i","type","footer","buttonClose","buttonSubmit","buttonSubmitSpinner","selector","style","display","setTimeout","window","innerWidth","alert","querySelectorAll","e","container","currentTarget","firstElementChild","checked","color","header","headerContainer","navBlock","linkNav","imgLink","alt","divInput","$89a3a1dba1b24509$var$createSearchBar","inputNav","undefined","placeholder","event","results","searchTerm","target","value","toLowerCase","active","filter","includes","divButton","buttonBoards","dropdownMenu","toggle","contains","allBoardsItems","$89a3a1dba1b24509$var$createBoardsDropdownOptions","dropdown","console","log","innerHTML","then"],"version":3,"file":"index.c5aafb72.js.map"}