{"mappings":"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","sources":["src/scripts/script.js"],"sourcesContent":["//=====================\n// Переменные\n\nlet cardArray = [];\nlet cardArrayBoard1 = [];\nlet cardArrayBoard2 = [];\nlet cardArrayBoard3 = [];\n\nconst boards = {\n  0: cardArrayBoard1,\n  1: cardArrayBoard2,\n  2: cardArrayBoard3,\n};\n\nlet activeBoardIndex = -1;\n\n//=====================\n// Методы\n\nasync function getCards() {\n  const response = await fetch(\n    \"https://65d85342c96fbb24c1bb40ab.mockapi.io/api/pintrest/PinterestClone\"\n  );\n\n  return await response.json();\n}\n\nfunction getFromLocalStorage() {\n  if (localStorage.getItem(\"cardArray\")) {\n    cardArray = JSON.parse(localStorage.getItem(\"cardArray\"));\n    createCardsGrid(cardArray);\n  }\n  if (localStorage.getItem(\"cardArrayBoard1\")) {\n    boards[0] = cardArrayBoard1 = JSON.parse(localStorage.getItem(\"cardArrayBoard1\"));\n  }\n  if (localStorage.getItem(\"cardArrayBoard2\")) {\n    boards[1] = cardArrayBoard2 = JSON.parse(localStorage.getItem(\"cardArrayBoard2\"));\n  }\n  if (localStorage.getItem(\"cardArrayBoard3\")) {\n    boards[2] = cardArrayBoard3 = JSON.parse(localStorage.getItem(\"cardArrayBoard3\"));\n  }\n}\n\nfunction setToLocalStorage(array, name) {\n  localStorage.setItem(name, JSON.stringify(array));\n}\n\n// Создает элемент с указанными свойствами\nfunction createElement({ tag, className, place, text, attribute }) {\n  const someElem = document.createElement(tag);\n  className.forEach((element) => {\n    someElem.classList.add(element);\n  });\n  if (text) {\n    someElem.innerText = text;\n  }\n  if (attribute) {\n    for (key in attribute) {\n      someElem.setAttribute(`${key}`, `${attribute[key]}`);\n    }\n  }\n\n  place.append(someElem);\n  return someElem;\n}\n\n//=================================\n// Заголовок страницы\n\nfunction searchByLetters(searchTerm, cards) {\n  return cards.filter((card) =>\n    card.hashtag.toLowerCase().includes(searchTerm)\n  );\n}\n\nfunction updateSearchResults(results) {\n  // console.log(\"Обновление отображения результатов: \", results);\n  let main = document.querySelector(\"main\");\n  main.remove();\n  createCardsGrid(results);\n}\n\n// Создает строку поиска\nfunction createSearchBar(parent) {\n  const inputNav = createElement({\n    tag: \"input\",\n    className: [\"navigation__input\"],\n    text: undefined,\n    attribute: {\n      type: \"search\",\n      placeholder: \"Поиск...\",\n    },\n    place: parent,\n  });\n\n  inputNav.addEventListener(\"input\", function (event) {\n    const searchTerm = event.target.value.toLowerCase();\n\n    // поиск и отображение результатов\n    const board = activeBoardIndex != -1 ? boards[ activeBoardIndex ] : cardArray;\n    const searchResults = searchByLetters(searchTerm, board);\n    updateSearchResults(searchResults);\n  });\n}\n\n// Создает элементы выпадающего списка досок\nfunction createBoardsDropdownOptions(dropdown) {\n  const nameBoards = [\"Доска 1\", \"Доска 2\", \"Доска 3\"];\n\n  for (let j = 0; j < nameBoards.length; j++) {\n    const linkBoard = createElement({\n      tag: \"a\",\n      className: [\"Boards__item\"],\n      text: nameBoards[j],\n      place: dropdown,\n    });\n\n    linkBoard.addEventListener(\"click\", function (event) {\n      console.log(\"Выбрана доска:\", nameBoards[j]);\n      let main = document.querySelector(\"main\");\n      main.innerHTML = \"\";\n\n      activeBoardIndex = j;\n      createCardsGrid(boards[j]);\n    });\n  }\n}\n\n// Создает выпадающие список досок\nfunction createBoardsDropdown(parent) {\n    const dropdownMenu = createElement({\n      tag: \"div\",\n      className: [\"Boards__menu\"],\n      place: parent,\n    });\n\n    createBoardsDropdownOptions(dropdownMenu);\n\n    return dropdownMenu;\n}\n\n// Создает заголовок страницы\nfunction createHeader() {\n  const header = createElement({\n    tag: \"header\",\n    className: [\"header\"],\n    place: root,\n  });\n\n  const headerContainer = createElement({\n    tag: \"div\",\n    className: [\"header__container\"],\n    place: header,\n  });\n\n  const navBlock = createElement({\n    tag: \"nav\",\n    className: [\"navigation\"],\n    place: headerContainer,\n  });\n\n  const linkNav = createElement({\n    tag: \"div\",\n    className: [\"link__nav\"],\n    place: navBlock,\n  });\n\n  // Банер страницы\n  const imgLink = createElement({\n    tag: \"img\",\n    className: [\"link__img\"],\n    attribute: {\n      src: \"https://i.pinimg.com/280x280_RS/f6/e9/3a/f6e93a06b500b2d87ffd32e1f56f7c6f.jpg\",\n      alt: \"Pinterest logo\",\n    },\n    place: linkNav,\n  });\n\n  // при загружает грид с главной страницы\n  imgLink.addEventListener(\"click\", function () {\n    activeBoardIndex = -1;\n    createCardsGrid(cardArray);\n  });\n\n  const divInput = createElement({\n    tag: \"div\",\n    className: [\"div__input-icon\", \"div__input-icon_search\"],\n    place: navBlock,\n  });\n\n  createSearchBar(divInput);\n\n  const divButton = createElement({\n    tag: \"div\",\n    className: [\"div__button\"],\n    place: divInput,\n  });\n  const buttonBoards = createElement({\n    tag: \"a\",\n    attribute: { href: \"#\" },\n    className: [\"button-boards\"],\n    place: divButton,\n  });\n  const spanButton = createElement({\n    tag: \"span\",\n    className: [\"button-boards_span\"],\n    text: \"Выбрать доску\",\n    place: buttonBoards,\n  });\n\n  createBoardsDropdown(divButton)\n}\n\n/**\n * Добавляет карточку на выбранную доску\n */\nfunction addCardToBoard(cardData, boardIndex) {\n  switch (boardIndex) {\n    case 0:\n      cardArrayBoard1.push(cardData);\n      setToLocalStorage(cardArray, \"cardArray\");\n      setToLocalStorage(cardArrayBoard1, \"cardArrayBoard1\");\n      break;\n    case 1:\n      cardArrayBoard2.push(cardData);\n      setToLocalStorage(cardArray, \"cardArray\");\n      setToLocalStorage(cardArrayBoard2, \"cardArrayBoard2\");\n      break;\n    case 2:\n      cardArrayBoard3.push(cardData);\n      setToLocalStorage(cardArray, \"cardArray\");\n      setToLocalStorage(cardArrayBoard3, \"cardArrayBoard3\");\n      break;\n  }\n  // Для проверки добавления. Потом надо убрать\n  console.log(`Добавление карты на доску ${boardIndex}:`, cardData);\n}\n\n/**\n * Создает список доступных досок\n */\nfunction createBoardsOptions(parent, cardData, nameBoards) {\n  for (let j = 0; j < nameBoards.length; j++) {\n    const linkBoard = createElement({\n      tag: \"a\",\n      className: [\"list__item\"],\n      attribute: { href: \"#\" },\n      text: nameBoards[j],\n      place: parent,\n    });\n\n    linkBoard.addEventListener(\"click\", function () {\n      const index = cardArray.findIndex((item) => item.id === cardData.id);\n      if (index !== -1) {\n        cardArray.splice(index, 1);\n        addCardToBoard(cardData, j);\n      }\n      cardData.view.remove();\n      cardData.view = null;\n    });\n  }\n}\n\n//===========================\n// Меню карточки\n\n// Создаем кнопку для меню карточки\nfunction createPinMenuButton(parent, buttonText, id) {\n  const button = createElement({\n    tag: \"button\",\n    className: [\"pin-menu__button\"],\n    attribute: {\n      id: [id],\n    },\n    place: parent,\n    text: buttonText,\n  });\n\n  return button;\n}\n\n// Создает меню карточки\nfunction createPinMenu( cardData, parent ) {\n  const pinMenu = createElement({\n    tag: \"div\",\n    className: [\"pin-menu\"],\n    place: parent,\n  });\n\n  const buttonAdd = createPinMenuButton(pinMenu, \"Добавить на доску\", \"button-add\");\n  const buttonComplain = createPinMenuButton(pinMenu, \"Пожаловаться\", \"button-complain\");\n\n  // Открытие окна добавления карточки\n  buttonAdd.addEventListener(\"click\", () => {\n    createModalAdd( pinMenu, cardData );\n  });\n  \n  // Открытие окна жалоб\n  buttonComplain.addEventListener(\"click\", () => {\n    createComplaintWindow( pinMenu );\n  });\n\n  return pinMenu;\n}\n\n//===========================\n// Окно добавления на доску\n\n/** \n * Создает модальное окно для добавления карточки на доску\n */\nfunction createModalAdd(parent, cardData) {\n  const modalAdd = document.createElement(\"div\");\n  modalAdd.className = \"modal-add\";\n  parent.append(modalAdd);\n\n  const modalAddContainer = createElement({\n    tag: \"div\",\n    className: [\"modal-add__container\"],\n    place: modalAdd,\n  });\n\n  const modalAddBoards = createElement({\n    teg: \"div\",\n    className: [\"modal-add__boards\"],\n    place: modalAddContainer,\n  });\n\n  const modalAddTitle = createElement({\n    tag: \"div\",\n    className: [\"modal-add__title\"],\n    text: \"Добавить на доску\",\n    place: modalAddBoards,\n  });\n\n  //доски с оберткой\n  const modalAddList = createElement({\n    tag: \"div\",\n    className: [\"modal-add__list\"],\n    place: modalAddBoards,\n  });\n\n  createBoardsOptions( modalAddList, cardData, [\"Доска 1\", \"Доска 2\", \"Доска 3\"] );\n\n  const modalAddFooter = createElement({\n    tag: \"div\",\n    className: [\"modal-add__footer\"],\n    place: modalAddBoards,\n  });\n\n  const modalAddClose = createElement({\n    tag: \"button\",\n    className: [\"modal-add__close\"],\n    text: \"Закрыть\",\n    place: modalAddFooter,\n  });\n\n  //Закрытие и удаление модального окна \"Добавить на доску\"\n  modalAddClose.addEventListener(\"click\", () => {\n    modalAdd.remove();\n  });\n}\n\n//===========================\n//Модальное окно пожаловаться\n\n// Создает окно жалобы\nfunction createComplaintWindow( parent ) {\n  const rootDiv = document.createElement(\"div\");\n  rootDiv.className = \"modal\";\n  parent.append(rootDiv);\n\n  const body = createElement({\n    tag: \"div\",\n    className: [\"modal_body\"],\n    place: rootDiv,\n  });\n\n  const content = createElement({\n    teg: \"div\",\n    className: [\"modal_content\"],\n    place: body,\n  });\n\n  const title = createElement({\n    tag: \"div\",\n    className: [\"modal_title\"],\n    text: \"Жалоба на пин\",\n    place: content,\n  });\n\n  //чекбоксы с оберткой\n  const text = createElement({\n    tag: \"div\",\n    className: [\"modal_text\"],\n    place: content,\n  });\n\n  const arrText = [\n    \"Спам\",\n    \"Изображения обнаженного тела, порнография или содержимое сексуального характера\",\n    \"Членовредительство\",\n    \"Ложная информация\",\n    \"Агрессивные действия\",\n    \"Опасные товары\",\n    \"Преследование или критика\",\n    \"Сцены насилия\",\n    \"Нарушение конфиденциальности\",\n    \"Это моя интеллектуальная собственность\",\n  ];\n  for (let i = 0; i <= arrText.length - 1; i++) {\n    const label = createElement({\n      tag: \"label\",\n      className: [\"modal_label\"],\n      text: arrText[i],\n      place: text,\n    });\n\n    createElement({\n      tag: \"input\",\n      className: [\"modal_checkbox\"],\n      attribute: {\n        type: \"checkbox\",\n      },\n      place: label,\n    });\n\n    createElement({\n      tag: \"span\",\n      className: [\"modal_span\"],\n      place: label,\n    });\n  }\n\n  const footer = createElement({\n    tag: \"div\",\n    className: [\"modal_footer\"],\n    place: content,\n  });\n\n  const buttonClose = createElement({\n    tag: \"button\",\n    className: [\"modal_close\"],\n    text: \"Отмена\",\n    place: footer,\n  });\n\n  const buttonSubmit = createElement({\n    tag: \"button\",\n    className: [\"modal_submit\"],\n    text: \"Отправить\",\n    place: footer,\n  });\n\n  // Закрытие и удаление модального окна \n  buttonClose.addEventListener(\"click\", () => {\n    rootDiv.remove();\n  });\n\n  // Отправить форму и закрыть модальное окно\n  buttonSubmit.addEventListener(\"click\", () => {\n    rootDiv.remove();\n    window.setTimeout(showAlert, 500);\n    function showAlert() {\n        alert(\"Ваша жалоба отправлена!\");\n    }\n  });\n\n  //Окраска текста при клике на чекбокс\n  const selectors = rootDiv.querySelectorAll(\".modal_label\");\n  for (const selector of selectors) {\n    selector.addEventListener(\"click\", (e) => {\n    const container = e.currentTarget;\n    if (container.firstElementChild.checked) {\n        container.style.color = \"red\";\n    } else {\n        container.style.color = \"black\";\n    }\n    });\n  }\n}\n\n//===========================\n// Область карточек\n\n// Создает элемент карточки\nfunction createCard( cardData, parent ) {\n  const cardContainer = createElement({\n    tag: \"div\",\n    className: [\"card\"],\n    place: parent,\n  });\n\n  const pictureElement = createElement({\n    tag: \"img\",\n    className: [\"card-picture\"],\n    attribute: {\n      src: cardData.picture + \"?random=\" + cardData.id,\n    },\n    place: cardContainer,\n  });\n\n  const cardContent = createElement({\n    tag: \"div\",\n    className: [\"card-content\"],\n    place: cardContainer,\n  });\n\n  const hashtagElement = createElement({\n    tag: \"div\",\n    className: [\"card-hashtag\"],\n    text: `#${cardData.hashtag}`,\n    place: cardContent,\n  });\n\n  const avatarElement = createElement({\n    tag: \"img\",\n    className: [\"card-avatar\"],\n    attribute: { src: cardData.avatar },\n    place: cardContent,\n  });\n\n  return cardContainer;\n}\n\n// Создает сетку карточек\nfunction createCardsGrid(cards) {\n  const oldMain = document.querySelector(\"main\");\n  if (oldMain) {\n    oldMain.remove();\n  }\n  const main = createElement({\n    tag: \"main\",\n    className: [\"main\"],\n    place: root,\n  });\n\n  cards.forEach((cardData) => {\n      const card = createCard( cardData, main );\n      cardData.view = card;\n      \n      // Меню карточки\n      const cardPinMenu = createPinMenu( cardData, card );\n\n      card.addEventListener(\"mouseover\", function () {\n        cardPinMenu.style.display = \"flex\";\n      });\n\n      card.addEventListener(\"mouseout\", function () {\n        cardPinMenu.style.display = \"none\";\n      });\n  });\n}\n\n//===========================\n\ncreateHeader();\ngetFromLocalStorage();\n\nif (cardArray.length == 0) {\n  getCards().then((cards) => {\n    createCardsGrid(cards);\n    setToLocalStorage(cards, \"cardArray\");\n    cardArray = cards;\n  });\n}"],"names":[],"version":3,"file":"index.09d9d7db.js.map","sourceRoot":"/__parcel_source_root/"}